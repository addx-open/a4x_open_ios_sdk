#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
#ifndef A4XLIVESDK_SWIFT_H
#define A4XLIVESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import A4xBaseSDK;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebRTC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="A4xLiveSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSCoder;

SWIFT_CLASS("_TtC10A4xLiveSDK19A4xDisturbAlertView")
@interface A4xDisturbAlertView : UIControl
- (nonnull instancetype)init;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIEvent;

SWIFT_CLASS("_TtC10A4xLiveSDK27A4xFullLiveVideoContentView")
@interface A4xFullLiveVideoContentView : UIView
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNumber;

SWIFT_CLASS("_TtC10A4xLiveSDK27A4xFullLiveVideoControlView")
@interface A4xFullLiveVideoControlView : UIView
/// 从声音设置页面返回 回来后刷新声音按钮的方法
- (void)updateVolumeButtonUIWithLiveAudioToggleOn:(BOOL)liveAudioToggleOn;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIGestureRecognizer;

@interface A4xFullLiveVideoControlView (SWIFT_EXTENSION(A4xLiveSDK)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end




@class NSString;
@class NSBundle;

SWIFT_CLASS("_TtC10A4xLiveSDK30A4xFullLiveVideoViewController")
@interface A4xFullLiveVideoViewController : A4xBaseViewController
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




@interface A4xFullLiveVideoViewController (SWIFT_EXTENSION(A4xLiveSDK))
- (void)updateLiveAudioToggleOnLiveAudioToggleOn:(BOOL)liveAudioToggleOn;
@end

@class UINavigationController;

SWIFT_CLASS("_TtC10A4xLiveSDK25A4xHomeBaseViewController")
@interface A4xHomeBaseViewController : A4xBaseViewController
@property (nonatomic, readonly, strong) UINavigationController * _Nullable navigationController;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK20A4xHomeBottomBarView")
@interface A4xHomeBottomBarView : UIView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIButton;

SWIFT_CLASS("_TtC10A4xLiveSDK17A4xHomeHeaderView")
@interface A4xHomeHeaderView : UIView
- (void)headerAddClickActinWithSender:(UIButton * _Nonnull)sender;
- (void)headerMenuClickActinWithSender:(UIButton * _Nonnull)sender;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK30A4xHomeLiveVideoViewController")
@interface A4xHomeLiveVideoViewController : A4xHomeBaseViewController
/// 根据deviceId播放直播
@property (nonatomic, copy) NSString * _Nullable deviceId;
/// navigation title
@property (nonatomic, copy) NSString * _Nullable liveTitle;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNav:(UINavigationController * _Nullable)nav deviceId:(NSString * _Nullable)deviceId liveTitle:(NSString * _Nullable)liveTitle OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
@end







@class UICollectionView;
@class NSIndexPath;
@class UICollectionViewCell;

@interface A4xHomeLiveVideoViewController (SWIFT_EXTENSION(A4xLiveSDK)) <UICollectionViewDataSource, UICollectionViewDelegate>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class UIViewController;
@protocol A4xObjcPlayerStateChangeProtocol;
enum A4xObjcPlayerDisplayType : NSInteger;
@class A4xObjcDeviceModel;
@class A4xObjcSDPlayModel;
enum A4xPlayerStopReason : NSInteger;
@class A4xObjcVideoTimeModelResponse;
enum A4xSDVideoError : NSInteger;
@class A4xObjcUIRresetRotate;
enum A4xObjcVideoSharpType : NSInteger;
@class UIImage;

SWIFT_CLASS("_TtC10A4xLiveSDK14A4xLiveManager")
@interface A4xLiveManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) A4xLiveManager * _Nonnull shared;)
+ (A4xLiveManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)mutableCopy SWIFT_WARN_UNUSED_RESULT;
- (void)getThumbImage;
- (UIViewController * _Nullable)getDeviceListVCWithNav:(UINavigationController * _Nullable)nav deviceId:(NSString * _Nullable)deviceId liveTitle:(NSString * _Nullable)liveTitle SWIFT_WARN_UNUSED_RESULT;
- (void)objc_addStateProtocolWithTarget:(id <A4xObjcPlayerStateChangeProtocol> _Nonnull)target;
- (void)objc_removeStateProtocolWithTarget:(id <A4xObjcPlayerStateChangeProtocol> _Nonnull)target;
/// OBJC开始直播的方法
/// 该接口有一个objcSDPlayModel参数,针对于playType=.sd或者是playType=.sdFull是该参数必传,涉及到SD卡播放的必要入参
/// 如果是其他类型的直播效果,可以不传objcSDPlayModel
/// device: A4xObjcDeviceModel设备模型
/// playType: 直播播放类型(需注意.sd和.sdFull比较特殊)
/// objcSDPlayModel: SD卡播放模型(针对.sd和.sdFull类型必需参数)
/// voiceEnable: 允许声音
/// shouldSpeak:
- (void)objc_playLiveWithPlayType:(enum A4xObjcPlayerDisplayType)playType device:(A4xObjcDeviceModel * _Nonnull)device objcSDPlayModel:(A4xObjcSDPlayModel * _Nonnull)objcSDPlayModel voiceEnable:(BOOL)voiceEnable shouldSpeak:(BOOL)shouldSpeak;
/// OBJC停止直播的方法
- (void)objc_stopLiveWithDevice:(A4xObjcDeviceModel * _Nonnull)device playNumber:(NSInteger)playNumber reason:(enum A4xPlayerStopReason)reason;
/// OBJC设置直播是否可放大
/// device: A4xObjcDeviceModel设备模型
/// enable: 是否可放大 YES/NO
- (void)objc_setVideoZoomEnableWithDevice:(A4xObjcDeviceModel * _Nonnull)device enable:(BOOL)enable;
/// OBJC设置直播是否可放大
/// device: A4xObjcDeviceModel设备模型
/// enable: 是否可放大 YES/NO
- (void)objc_updateWithDevice:(A4xObjcDeviceModel * _Nonnull)device;
/// OC获取SD卡直播的切片
/// @param device             : 设备模型
/// @param startTime          : 开始时间戳
/// @param stopTime           : 结束时间戳
/// @param completionCallback : 回调
- (void)objc_getSDVideoListWithDevice:(A4xObjcDeviceModel * _Nonnull)device startTime:(NSTimeInterval)startTime stopTime:(NSTimeInterval)stopTime :(void (^ _Nonnull)(A4xObjcVideoTimeModelResponse * _Nonnull, enum A4xSDVideoError))completionCallback;
/// OC设置摇头机角度
/// @param device             : 设备模型
/// @param rotateModel        : 摇头的OC模型,左负右正 -1 0 1 三个值
/// @param completionCallback : 回调错误原因
- (void)objc_sendRotateCmdWithDeviceModel:(A4xObjcDeviceModel * _Nonnull)deviceModel rotateModel:(A4xObjcUIRresetRotate * _Nonnull)rotateModel comple:(void (^ _Nonnull)(NSString * _Nullable))comple;
/// OC设置白光灯
/// @param device : 设备模型
/// @param enable : 开启/关闭
- (void)objc_setWhiteLightWithDevice:(A4xObjcDeviceModel * _Nonnull)device enable:(BOOL)enable;
/// OC设置声音
/// @param device : 设备模型
/// @param enable : 开启/关闭
- (void)objc_setAudioEnableWithDevice:(A4xObjcDeviceModel * _Nonnull)device enable:(BOOL)enable;
/// OC设置对讲
/// @param device : 设备模型
/// @param enable : 开启/关闭
- (void)objc_setSpeakEnableWithDevice:(A4xObjcDeviceModel * _Nonnull)device enable:(BOOL)enable;
/// OC设置分辨率
/// @param device             : 设备模型
/// @param objcSharpType      : 分辨率类型
/// @param completionCallback : 结果回调
- (void)objc_setResolutionTypeWithDevice:(A4xObjcDeviceModel * _Nonnull)device objcSharpType:(enum A4xObjcVideoSharpType)objcSharpType completionCallback:(void (^ _Nonnull)(BOOL))completionCallback;
/// OC获取截图
/// @param device             : 设备模型
/// @param objcSharpType      : 分辨率类型
/// @param completionCallback : UIImage回调
- (void)objc_getCurrentImageWithDevice:(A4xObjcDeviceModel * _Nonnull)device completionCallback:(void (^ _Nonnull)(UIImage * _Nullable))completionCallback;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK17A4xLivePlayerView")
@interface A4xLivePlayerView : UIScrollView <UIScrollViewDelegate>
- (void)removeFromSuperview;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)updateConstraints;
@property (nonatomic) CGRect frame;
- (void)layoutSubviews;
- (void)scrollViewDidZoom:(UIScrollView * _Nonnull)scrollView;
- (UIView * _Nullable)viewForZoomingInScrollView:(UIScrollView * _Nonnull)scrollView SWIFT_WARN_UNUSED_RESULT;
@end

@class UITouch;

SWIFT_CLASS("_TtC10A4xLiveSDK21A4xLiveVideoErrorView")
@interface A4xLiveVideoErrorView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK23A4xLiveVideoLoadingView")
@interface A4xLiveVideoLoadingView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK16A4xLiveVideoView")
@interface A4xLiveVideoView : UIImageView
@property (nonatomic) CGRect frame;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK21A4xLiveVideoViewModel")
@interface A4xLiveVideoViewModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 播放展示类型
typedef SWIFT_ENUM(NSInteger, A4xObjcPlayerDisplayType, closed) {
  A4xObjcPlayerDisplayTypeSplit = 0,
  A4xObjcPlayerDisplayTypeVertical = 1,
  A4xObjcPlayerDisplayTypeLandscape = 2,
  A4xObjcPlayerDisplayTypeAzone = 3,
  A4xObjcPlayerDisplayTypeAzoneFull = 4,
  A4xObjcPlayerDisplayTypeRectbox = 5,
  A4xObjcPlayerDisplayTypeBox = 6,
  A4xObjcPlayerDisplayTypePeopleBox = 7,
  A4xObjcPlayerDisplayTypeInstall = 8,
  A4xObjcPlayerDisplayTypeSd = 9,
  A4xObjcPlayerDisplayTypeSdFull = 10,
};

@class A4xObjcVideoActionModel;
enum A4xObjcPlayerStateType : NSInteger;

/// 直播代理回调模型
SWIFT_CLASS("_TtC10A4xLiveSDK18A4xObjcPlayerModel")
@interface A4xObjcPlayerModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull error;
@property (nonatomic, strong) UIImage * _Nonnull thumbImage;
@property (nonatomic) BOOL isFork;
@property (nonatomic) enum A4xSDVideoError sdError;
@property (nonatomic, strong) UIImage * _Nonnull tipIcon;
@property (nonatomic) NSInteger code;
@property (nonatomic, strong) A4xObjcVideoActionModel * _Nonnull action;
@property (nonatomic, copy) NSString * _Nonnull reconnect;
@property (nonatomic) enum A4xObjcPlayerStateType playState;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, A4xObjcPlayerParamKey, closed) {
  A4xObjcPlayerParamKeyAi = 0,
  A4xObjcPlayerParamKeyAiId = 1,
  A4xObjcPlayerParamKeyVideoScale = 2,
  A4xObjcPlayerParamKeyLookWhite = 3,
};

typedef SWIFT_ENUM(NSInteger, A4xObjcPlayerRecordState, closed) {
  A4xObjcPlayerRecordStateStart = 0,
  A4xObjcPlayerRecordStateEnd = 1,
  A4xObjcPlayerRecordStateStartError = 2,
  A4xObjcPlayerRecordStateEndError = 3,
};

@class A4xObjcReplaySeekModel;

SWIFT_PROTOCOL("_TtP10A4xLiveSDK32A4xObjcPlayerStateChangeProtocol_")
@protocol A4xObjcPlayerStateChangeProtocol
/// deviceId
- (NSString * _Nonnull)a4xObjcPlayerDeviceId SWIFT_WARN_UNUSED_RESULT;
/// 播放器连接状态
- (void)a4xObjcPlayerConnectStateWithPlayerModel:(A4xObjcPlayerModel * _Nonnull)playerModel videoV:(UIView * _Nullable)videoV videoSize:(CGSize)videoSize;
/// 获取设备发送的命令
/// @param deviceID            : 设备Id
/// @param objcReplaySeekModel : 数据内容模型
/// @param action              : action
- (void)a4xObjcPlayerReceiveReplaySeekCommandWithDeviceID:(NSString * _Nonnull)deviceID objcReplaySeekModel:(A4xObjcReplaySeekModel * _Nonnull)objcReplaySeekModel action:(NSString * _Nullable)action;
@end

typedef SWIFT_ENUM(NSInteger, A4xObjcPlayerStateType, closed) {
  A4xObjcPlayerStateTypeNone = 0,
  A4xObjcPlayerStateTypeLoading = 1,
  A4xObjcPlayerStateTypePlaying = 2,
  A4xObjcPlayerStateTypePaused = 3,
  A4xObjcPlayerStateTypePausedp2p = 4,
  A4xObjcPlayerStateTypeFinish = 5,
  A4xObjcPlayerStateTypeError = 6,
  A4xObjcPlayerStateTypeUnuse = 7,
  A4xObjcPlayerStateTypeUpdating = 8,
};


/// webRTC回复的模型
/// 这里只回调了replaySeek类型的数据
SWIFT_CLASS("_TtC10A4xLiveSDK22A4xObjcReplaySeekModel")
@interface A4xObjcReplaySeekModel : NSObject
@property (nonatomic, copy) NSString * _Nullable action;
@property (nonatomic) int64_t timeStamp;
@property (nonatomic) int64_t seekTime;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// SD卡模型
SWIFT_CLASS("_TtC10A4xLiveSDK18A4xObjcSDPlayModel")
@interface A4xObjcSDPlayModel : NSObject
- (nonnull instancetype)initWithTime:(NSTimeInterval)time end:(NSTimeInterval)end hasData:(BOOL)hasData audio:(BOOL)audio OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) NSTimeInterval time;
@property (nonatomic) NSTimeInterval end;
@property (nonatomic) BOOL hasData;
@property (nonatomic) BOOL audio;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10A4xLiveSDK21A4xObjcUIRresetRotate")
@interface A4xObjcUIRresetRotate : NSObject
@property (nonatomic) float pitch;
@property (nonatomic) float yaw;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, A4xObjcVideoAction, closed) {
  A4xObjcVideoActionVideo = 0,
  A4xObjcVideoActionUpgrade = 1,
  A4xObjcVideoActionSetting = 2,
  A4xObjcVideoActionRefresh = 3,
  A4xObjcVideoActionSleepPlan = 4,
};

enum A4xVideoButtonStyle : NSInteger;

/// 直播动作模型
SWIFT_CLASS("_TtC10A4xLiveSDK23A4xObjcVideoActionModel")
@interface A4xObjcVideoActionModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic) enum A4xVideoButtonStyle buttonstyle;
@property (nonatomic) enum A4xObjcVideoAction action;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, A4xObjcVideoSharpType, closed) {
  A4xObjcVideoSharpTypeVideo_4k_2 = 0,
  A4xObjcVideoSharpTypeVideo_4k_1 = 1,
  A4xObjcVideoSharpTypeVideo_2k = 2,
  A4xObjcVideoSharpTypeHb = 3,
  A4xObjcVideoSharpTypeStandard = 4,
  A4xObjcVideoSharpTypeSmooth = 5,
  A4xObjcVideoSharpTypeAuto = 6,
};

/// 发送命令错误码
typedef SWIFT_ENUM(NSInteger, A4xObjcWebRtcCmdError, closed) {
/// 设备无sdcard或者被拔除
  A4xObjcWebRtcCmdErrorSdNoExist = 0,
/// 设备无录像文件
  A4xObjcWebRtcCmdErrorSDNoVideo = 1,
/// sdcard格式不支持，需要格式化
  A4xObjcWebRtcCmdErrorSdNeedFormat = 2,
/// 当前正在有人观看录像
  A4xObjcWebRtcCmdErrorVideoLimit = 3,
/// 未知错误
  A4xObjcWebRtcCmdErrorUnKnow = 4,
};

typedef SWIFT_ENUM(NSInteger, A4xOtaUpgradeStyle, closed) {
  A4xOtaUpgradeStyleLater = 0,
  A4xOtaUpgradeStyleUptate = 1,
  A4xOtaUpgradeStyleIgonre = 2,
};

typedef SWIFT_ENUM(NSInteger, A4xPlayerStopReason, closed) {
  A4xPlayerStopReasonNone = 0,
  A4xPlayerStopReasonClick = 1,
  A4xPlayerStopReasonPull = 2,
  A4xPlayerStopReasonChangePage = 3,
  A4xPlayerStopReasonEnterbackground = 4,
  A4xPlayerStopReasonChangeModle = 5,
  A4xPlayerStopReasonLogout = 6,
  A4xPlayerStopReasonLiveToplimit = 7,
  A4xPlayerStopReasonLiveSplitNumlimit = 8,
  A4xPlayerStopReasonLiveChangeDevice = 9,
  A4xPlayerStopReasonLocalNetLimit = 10,
};

@class A4xObjcPresetModel;

SWIFT_CLASS("_TtC10A4xLiveSDK18A4xPresetDataModel")
@interface A4xPresetDataModel : NSObject
- (nonnull instancetype)initWithFllowInfos:(NSDictionary<NSString *, NSNumber *> * _Nonnull)fllowInfos followTypes:(NSDictionary<NSString *, NSNumber *> * _Nonnull)followTypes OBJC_DESIGNATED_INITIALIZER;
/// 使用预设位置
- (void)setCurrentLocationWithDeviceId:(NSString * _Nullable)deviceId preset:(A4xObjcPresetModel * _Nullable)preset comple:(void (^ _Nonnull)(NSString * _Nullable))comple;
- (BOOL)canAddLocationWithDeviceId:(NSString * _Nullable)deviceId SWIFT_WARN_UNUSED_RESULT;
- (void)addWithDeviceId:(NSString * _Nullable)deviceId image:(UIImage * _Nullable)image name:(NSString * _Nullable)name comple:(void (^ _Nonnull)(BOOL, NSString * _Nullable))comple;
- (void)removeWithDeviceId:(NSString * _Nullable)deviceId pointId:(NSInteger)pointId comple:(void (^ _Nonnull)(BOOL, NSString * _Nullable))comple;
- (void)selectLocationsWithDeviceId:(NSString * _Nullable)deviceId comple:(void (^ _Nonnull)(NSInteger, NSArray<A4xObjcPresetModel *> * _Nonnull, NSString * _Nullable))comple;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, A4xSDVideoError, closed) {
/// 设备无sdcard或者被拔除
  A4xSDVideoErrorSdNoExist = 1,
/// 设备无录像文件
  A4xSDVideoErrorSDNoVideo = 2,
/// sdcard格式不支持，需要格式化
  A4xSDVideoErrorSdNeedFormat = 3,
/// 当前正在有人观看录像
  A4xSDVideoErrorVideoLimit = 4,
/// 未知错误
  A4xSDVideoErrorUnKnow = 5,
/// 本地网络未开
  A4xSDVideoErrorLocalNetLimit = 6,
};


SWIFT_CLASS("_TtC10A4xLiveSDK12A4xShareView")
@interface A4xShareView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, A4xVideoButtonStyle, closed) {
  A4xVideoButtonStyleTheme = 0,
  A4xVideoButtonStyleLine = 1,
  A4xVideoButtonStyleNone = 2,
};


SWIFT_CLASS("_TtC10A4xLiveSDK15A4xWebRtcPlayer")
@interface A4xWebRtcPlayer : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol RTCVideoRenderer;

@interface A4xWebRtcPlayer (SWIFT_EXTENSION(A4xLiveSDK)) <RTCVideoViewDelegate>
- (void)videoView:(id <RTCVideoRenderer> _Nonnull)videoView didChangeVideoSize:(CGSize)size;
@end



@interface A4xWebRtcPlayer (SWIFT_EXTENSION(A4xLiveSDK))
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end



SWIFT_CLASS("_TtC10A4xLiveSDK27A4xWebRtcRequestResultModel")
@interface A4xWebRtcRequestResultModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK29A4xWebRtcTicketIceServerModel")
@interface A4xWebRtcTicketIceServerModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK20A4xWebRtcTicketModel")
@interface A4xWebRtcTicketModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK18A4xWebRtcViewModel")
@interface A4xWebRtcViewModel : NSObject
- (void)setWhiteLightWithEnable:(BOOL)enable;
- (void)stopUrlPlayerWithDeviceId:(NSString * _Nullable)deviceId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end





@interface A4xWebRtcViewModel (SWIFT_EXTENSION(A4xLiveSDK))
- (void)enterActiveGround;
- (void)enterBackGround;
- (void)keepAlive;
- (void)sendKeepAliveWithTime:(NSInteger)time comple:(void (^ _Nullable)(NSString * _Nullable))comple;
- (void)updateSpeedAction;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK19A4xWebSocketManager")
@interface A4xWebSocketManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC10A4xLiveSDK23DataChannelRequestModel")
@interface DataChannelRequestModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
#ifndef A4XLIVESDK_SWIFT_H
#define A4XLIVESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import A4xBaseSDK;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebRTC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="A4xLiveSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSCoder;

SWIFT_CLASS("_TtC10A4xLiveSDK19A4xDisturbAlertView")
@interface A4xDisturbAlertView : UIControl
- (nonnull instancetype)init;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIEvent;

SWIFT_CLASS("_TtC10A4xLiveSDK27A4xFullLiveVideoContentView")
@interface A4xFullLiveVideoContentView : UIView
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNumber;

SWIFT_CLASS("_TtC10A4xLiveSDK27A4xFullLiveVideoControlView")
@interface A4xFullLiveVideoControlView : UIView
/// 从声音设置页面返回 回来后刷新声音按钮的方法
- (void)updateVolumeButtonUIWithLiveAudioToggleOn:(BOOL)liveAudioToggleOn;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIGestureRecognizer;

@interface A4xFullLiveVideoControlView (SWIFT_EXTENSION(A4xLiveSDK)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end




@class NSString;
@class NSBundle;

SWIFT_CLASS("_TtC10A4xLiveSDK30A4xFullLiveVideoViewController")
@interface A4xFullLiveVideoViewController : A4xBaseViewController
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




@interface A4xFullLiveVideoViewController (SWIFT_EXTENSION(A4xLiveSDK))
- (void)updateLiveAudioToggleOnLiveAudioToggleOn:(BOOL)liveAudioToggleOn;
@end

@class UINavigationController;

SWIFT_CLASS("_TtC10A4xLiveSDK25A4xHomeBaseViewController")
@interface A4xHomeBaseViewController : A4xBaseViewController
@property (nonatomic, readonly, strong) UINavigationController * _Nullable navigationController;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK20A4xHomeBottomBarView")
@interface A4xHomeBottomBarView : UIView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIButton;

SWIFT_CLASS("_TtC10A4xLiveSDK17A4xHomeHeaderView")
@interface A4xHomeHeaderView : UIView
- (void)headerAddClickActinWithSender:(UIButton * _Nonnull)sender;
- (void)headerMenuClickActinWithSender:(UIButton * _Nonnull)sender;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK30A4xHomeLiveVideoViewController")
@interface A4xHomeLiveVideoViewController : A4xHomeBaseViewController
/// 根据deviceId播放直播
@property (nonatomic, copy) NSString * _Nullable deviceId;
/// navigation title
@property (nonatomic, copy) NSString * _Nullable liveTitle;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNav:(UINavigationController * _Nullable)nav deviceId:(NSString * _Nullable)deviceId liveTitle:(NSString * _Nullable)liveTitle OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
@end







@class UICollectionView;
@class NSIndexPath;
@class UICollectionViewCell;

@interface A4xHomeLiveVideoViewController (SWIFT_EXTENSION(A4xLiveSDK)) <UICollectionViewDataSource, UICollectionViewDelegate>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class UIViewController;
@protocol A4xObjcPlayerStateChangeProtocol;
enum A4xObjcPlayerDisplayType : NSInteger;
@class A4xObjcDeviceModel;
@class A4xObjcSDPlayModel;
enum A4xPlayerStopReason : NSInteger;
@class A4xObjcVideoTimeModelResponse;
enum A4xSDVideoError : NSInteger;
@class A4xObjcUIRresetRotate;
enum A4xObjcVideoSharpType : NSInteger;
@class UIImage;

SWIFT_CLASS("_TtC10A4xLiveSDK14A4xLiveManager")
@interface A4xLiveManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) A4xLiveManager * _Nonnull shared;)
+ (A4xLiveManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copy SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)mutableCopy SWIFT_WARN_UNUSED_RESULT;
- (void)getThumbImage;
- (UIViewController * _Nullable)getDeviceListVCWithNav:(UINavigationController * _Nullable)nav deviceId:(NSString * _Nullable)deviceId liveTitle:(NSString * _Nullable)liveTitle SWIFT_WARN_UNUSED_RESULT;
- (void)objc_addStateProtocolWithTarget:(id <A4xObjcPlayerStateChangeProtocol> _Nonnull)target;
- (void)objc_removeStateProtocolWithTarget:(id <A4xObjcPlayerStateChangeProtocol> _Nonnull)target;
/// OBJC开始直播的方法
/// 该接口有一个objcSDPlayModel参数,针对于playType=.sd或者是playType=.sdFull是该参数必传,涉及到SD卡播放的必要入参
/// 如果是其他类型的直播效果,可以不传objcSDPlayModel
/// device: A4xObjcDeviceModel设备模型
/// playType: 直播播放类型(需注意.sd和.sdFull比较特殊)
/// objcSDPlayModel: SD卡播放模型(针对.sd和.sdFull类型必需参数)
/// voiceEnable: 允许声音
/// shouldSpeak:
- (void)objc_playLiveWithPlayType:(enum A4xObjcPlayerDisplayType)playType device:(A4xObjcDeviceModel * _Nonnull)device objcSDPlayModel:(A4xObjcSDPlayModel * _Nonnull)objcSDPlayModel voiceEnable:(BOOL)voiceEnable shouldSpeak:(BOOL)shouldSpeak;
/// OBJC停止直播的方法
- (void)objc_stopLiveWithDevice:(A4xObjcDeviceModel * _Nonnull)device playNumber:(NSInteger)playNumber reason:(enum A4xPlayerStopReason)reason;
/// OBJC设置直播是否可放大
/// device: A4xObjcDeviceModel设备模型
/// enable: 是否可放大 YES/NO
- (void)objc_setVideoZoomEnableWithDevice:(A4xObjcDeviceModel * _Nonnull)device enable:(BOOL)enable;
/// OBJC设置直播是否可放大
/// device: A4xObjcDeviceModel设备模型
/// enable: 是否可放大 YES/NO
- (void)objc_updateWithDevice:(A4xObjcDeviceModel * _Nonnull)device;
/// OC获取SD卡直播的切片
/// @param device             : 设备模型
/// @param startTime          : 开始时间戳
/// @param stopTime           : 结束时间戳
/// @param completionCallback : 回调
- (void)objc_getSDVideoListWithDevice:(A4xObjcDeviceModel * _Nonnull)device startTime:(NSTimeInterval)startTime stopTime:(NSTimeInterval)stopTime :(void (^ _Nonnull)(A4xObjcVideoTimeModelResponse * _Nonnull, enum A4xSDVideoError))completionCallback;
/// OC设置摇头机角度
/// @param device             : 设备模型
/// @param rotateModel        : 摇头的OC模型,左负右正 -1 0 1 三个值
/// @param completionCallback : 回调错误原因
- (void)objc_sendRotateCmdWithDeviceModel:(A4xObjcDeviceModel * _Nonnull)deviceModel rotateModel:(A4xObjcUIRresetRotate * _Nonnull)rotateModel comple:(void (^ _Nonnull)(NSString * _Nullable))comple;
/// OC设置白光灯
/// @param device : 设备模型
/// @param enable : 开启/关闭
- (void)objc_setWhiteLightWithDevice:(A4xObjcDeviceModel * _Nonnull)device enable:(BOOL)enable;
/// OC设置声音
/// @param device : 设备模型
/// @param enable : 开启/关闭
- (void)objc_setAudioEnableWithDevice:(A4xObjcDeviceModel * _Nonnull)device enable:(BOOL)enable;
/// OC设置对讲
/// @param device : 设备模型
/// @param enable : 开启/关闭
- (void)objc_setSpeakEnableWithDevice:(A4xObjcDeviceModel * _Nonnull)device enable:(BOOL)enable;
/// OC设置分辨率
/// @param device             : 设备模型
/// @param objcSharpType      : 分辨率类型
/// @param completionCallback : 结果回调
- (void)objc_setResolutionTypeWithDevice:(A4xObjcDeviceModel * _Nonnull)device objcSharpType:(enum A4xObjcVideoSharpType)objcSharpType completionCallback:(void (^ _Nonnull)(BOOL))completionCallback;
/// OC获取截图
/// @param device             : 设备模型
/// @param objcSharpType      : 分辨率类型
/// @param completionCallback : UIImage回调
- (void)objc_getCurrentImageWithDevice:(A4xObjcDeviceModel * _Nonnull)device completionCallback:(void (^ _Nonnull)(UIImage * _Nullable))completionCallback;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK17A4xLivePlayerView")
@interface A4xLivePlayerView : UIScrollView <UIScrollViewDelegate>
- (void)removeFromSuperview;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)updateConstraints;
@property (nonatomic) CGRect frame;
- (void)layoutSubviews;
- (void)scrollViewDidZoom:(UIScrollView * _Nonnull)scrollView;
- (UIView * _Nullable)viewForZoomingInScrollView:(UIScrollView * _Nonnull)scrollView SWIFT_WARN_UNUSED_RESULT;
@end

@class UITouch;

SWIFT_CLASS("_TtC10A4xLiveSDK21A4xLiveVideoErrorView")
@interface A4xLiveVideoErrorView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK23A4xLiveVideoLoadingView")
@interface A4xLiveVideoLoadingView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK16A4xLiveVideoView")
@interface A4xLiveVideoView : UIImageView
@property (nonatomic) CGRect frame;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK21A4xLiveVideoViewModel")
@interface A4xLiveVideoViewModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 播放展示类型
typedef SWIFT_ENUM(NSInteger, A4xObjcPlayerDisplayType, closed) {
  A4xObjcPlayerDisplayTypeSplit = 0,
  A4xObjcPlayerDisplayTypeVertical = 1,
  A4xObjcPlayerDisplayTypeLandscape = 2,
  A4xObjcPlayerDisplayTypeAzone = 3,
  A4xObjcPlayerDisplayTypeAzoneFull = 4,
  A4xObjcPlayerDisplayTypeRectbox = 5,
  A4xObjcPlayerDisplayTypeBox = 6,
  A4xObjcPlayerDisplayTypePeopleBox = 7,
  A4xObjcPlayerDisplayTypeInstall = 8,
  A4xObjcPlayerDisplayTypeSd = 9,
  A4xObjcPlayerDisplayTypeSdFull = 10,
};

@class A4xObjcVideoActionModel;
enum A4xObjcPlayerStateType : NSInteger;

/// 直播代理回调模型
SWIFT_CLASS("_TtC10A4xLiveSDK18A4xObjcPlayerModel")
@interface A4xObjcPlayerModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull error;
@property (nonatomic, strong) UIImage * _Nonnull thumbImage;
@property (nonatomic) BOOL isFork;
@property (nonatomic) enum A4xSDVideoError sdError;
@property (nonatomic, strong) UIImage * _Nonnull tipIcon;
@property (nonatomic) NSInteger code;
@property (nonatomic, strong) A4xObjcVideoActionModel * _Nonnull action;
@property (nonatomic, copy) NSString * _Nonnull reconnect;
@property (nonatomic) enum A4xObjcPlayerStateType playState;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, A4xObjcPlayerParamKey, closed) {
  A4xObjcPlayerParamKeyAi = 0,
  A4xObjcPlayerParamKeyAiId = 1,
  A4xObjcPlayerParamKeyVideoScale = 2,
  A4xObjcPlayerParamKeyLookWhite = 3,
};

typedef SWIFT_ENUM(NSInteger, A4xObjcPlayerRecordState, closed) {
  A4xObjcPlayerRecordStateStart = 0,
  A4xObjcPlayerRecordStateEnd = 1,
  A4xObjcPlayerRecordStateStartError = 2,
  A4xObjcPlayerRecordStateEndError = 3,
};

@class A4xObjcReplaySeekModel;

SWIFT_PROTOCOL("_TtP10A4xLiveSDK32A4xObjcPlayerStateChangeProtocol_")
@protocol A4xObjcPlayerStateChangeProtocol
/// deviceId
- (NSString * _Nonnull)a4xObjcPlayerDeviceId SWIFT_WARN_UNUSED_RESULT;
/// 播放器连接状态
- (void)a4xObjcPlayerConnectStateWithPlayerModel:(A4xObjcPlayerModel * _Nonnull)playerModel videoV:(UIView * _Nullable)videoV videoSize:(CGSize)videoSize;
/// 获取设备发送的命令
/// @param deviceID            : 设备Id
/// @param objcReplaySeekModel : 数据内容模型
/// @param action              : action
- (void)a4xObjcPlayerReceiveReplaySeekCommandWithDeviceID:(NSString * _Nonnull)deviceID objcReplaySeekModel:(A4xObjcReplaySeekModel * _Nonnull)objcReplaySeekModel action:(NSString * _Nullable)action;
@end

typedef SWIFT_ENUM(NSInteger, A4xObjcPlayerStateType, closed) {
  A4xObjcPlayerStateTypeNone = 0,
  A4xObjcPlayerStateTypeLoading = 1,
  A4xObjcPlayerStateTypePlaying = 2,
  A4xObjcPlayerStateTypePaused = 3,
  A4xObjcPlayerStateTypePausedp2p = 4,
  A4xObjcPlayerStateTypeFinish = 5,
  A4xObjcPlayerStateTypeError = 6,
  A4xObjcPlayerStateTypeUnuse = 7,
  A4xObjcPlayerStateTypeUpdating = 8,
};


/// webRTC回复的模型
/// 这里只回调了replaySeek类型的数据
SWIFT_CLASS("_TtC10A4xLiveSDK22A4xObjcReplaySeekModel")
@interface A4xObjcReplaySeekModel : NSObject
@property (nonatomic, copy) NSString * _Nullable action;
@property (nonatomic) int64_t timeStamp;
@property (nonatomic) int64_t seekTime;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// SD卡模型
SWIFT_CLASS("_TtC10A4xLiveSDK18A4xObjcSDPlayModel")
@interface A4xObjcSDPlayModel : NSObject
- (nonnull instancetype)initWithTime:(NSTimeInterval)time end:(NSTimeInterval)end hasData:(BOOL)hasData audio:(BOOL)audio OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) NSTimeInterval time;
@property (nonatomic) NSTimeInterval end;
@property (nonatomic) BOOL hasData;
@property (nonatomic) BOOL audio;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10A4xLiveSDK21A4xObjcUIRresetRotate")
@interface A4xObjcUIRresetRotate : NSObject
@property (nonatomic) float pitch;
@property (nonatomic) float yaw;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, A4xObjcVideoAction, closed) {
  A4xObjcVideoActionVideo = 0,
  A4xObjcVideoActionUpgrade = 1,
  A4xObjcVideoActionSetting = 2,
  A4xObjcVideoActionRefresh = 3,
  A4xObjcVideoActionSleepPlan = 4,
};

enum A4xVideoButtonStyle : NSInteger;

/// 直播动作模型
SWIFT_CLASS("_TtC10A4xLiveSDK23A4xObjcVideoActionModel")
@interface A4xObjcVideoActionModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic) enum A4xVideoButtonStyle buttonstyle;
@property (nonatomic) enum A4xObjcVideoAction action;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, A4xObjcVideoSharpType, closed) {
  A4xObjcVideoSharpTypeVideo_4k_2 = 0,
  A4xObjcVideoSharpTypeVideo_4k_1 = 1,
  A4xObjcVideoSharpTypeVideo_2k = 2,
  A4xObjcVideoSharpTypeHb = 3,
  A4xObjcVideoSharpTypeStandard = 4,
  A4xObjcVideoSharpTypeSmooth = 5,
  A4xObjcVideoSharpTypeAuto = 6,
};

/// 发送命令错误码
typedef SWIFT_ENUM(NSInteger, A4xObjcWebRtcCmdError, closed) {
/// 设备无sdcard或者被拔除
  A4xObjcWebRtcCmdErrorSdNoExist = 0,
/// 设备无录像文件
  A4xObjcWebRtcCmdErrorSDNoVideo = 1,
/// sdcard格式不支持，需要格式化
  A4xObjcWebRtcCmdErrorSdNeedFormat = 2,
/// 当前正在有人观看录像
  A4xObjcWebRtcCmdErrorVideoLimit = 3,
/// 未知错误
  A4xObjcWebRtcCmdErrorUnKnow = 4,
};

typedef SWIFT_ENUM(NSInteger, A4xOtaUpgradeStyle, closed) {
  A4xOtaUpgradeStyleLater = 0,
  A4xOtaUpgradeStyleUptate = 1,
  A4xOtaUpgradeStyleIgonre = 2,
};

typedef SWIFT_ENUM(NSInteger, A4xPlayerStopReason, closed) {
  A4xPlayerStopReasonNone = 0,
  A4xPlayerStopReasonClick = 1,
  A4xPlayerStopReasonPull = 2,
  A4xPlayerStopReasonChangePage = 3,
  A4xPlayerStopReasonEnterbackground = 4,
  A4xPlayerStopReasonChangeModle = 5,
  A4xPlayerStopReasonLogout = 6,
  A4xPlayerStopReasonLiveToplimit = 7,
  A4xPlayerStopReasonLiveSplitNumlimit = 8,
  A4xPlayerStopReasonLiveChangeDevice = 9,
  A4xPlayerStopReasonLocalNetLimit = 10,
};

@class A4xObjcPresetModel;

SWIFT_CLASS("_TtC10A4xLiveSDK18A4xPresetDataModel")
@interface A4xPresetDataModel : NSObject
- (nonnull instancetype)initWithFllowInfos:(NSDictionary<NSString *, NSNumber *> * _Nonnull)fllowInfos followTypes:(NSDictionary<NSString *, NSNumber *> * _Nonnull)followTypes OBJC_DESIGNATED_INITIALIZER;
/// 使用预设位置
- (void)setCurrentLocationWithDeviceId:(NSString * _Nullable)deviceId preset:(A4xObjcPresetModel * _Nullable)preset comple:(void (^ _Nonnull)(NSString * _Nullable))comple;
- (BOOL)canAddLocationWithDeviceId:(NSString * _Nullable)deviceId SWIFT_WARN_UNUSED_RESULT;
- (void)addWithDeviceId:(NSString * _Nullable)deviceId image:(UIImage * _Nullable)image name:(NSString * _Nullable)name comple:(void (^ _Nonnull)(BOOL, NSString * _Nullable))comple;
- (void)removeWithDeviceId:(NSString * _Nullable)deviceId pointId:(NSInteger)pointId comple:(void (^ _Nonnull)(BOOL, NSString * _Nullable))comple;
- (void)selectLocationsWithDeviceId:(NSString * _Nullable)deviceId comple:(void (^ _Nonnull)(NSInteger, NSArray<A4xObjcPresetModel *> * _Nonnull, NSString * _Nullable))comple;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, A4xSDVideoError, closed) {
/// 设备无sdcard或者被拔除
  A4xSDVideoErrorSdNoExist = 1,
/// 设备无录像文件
  A4xSDVideoErrorSDNoVideo = 2,
/// sdcard格式不支持，需要格式化
  A4xSDVideoErrorSdNeedFormat = 3,
/// 当前正在有人观看录像
  A4xSDVideoErrorVideoLimit = 4,
/// 未知错误
  A4xSDVideoErrorUnKnow = 5,
/// 本地网络未开
  A4xSDVideoErrorLocalNetLimit = 6,
};


SWIFT_CLASS("_TtC10A4xLiveSDK12A4xShareView")
@interface A4xShareView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, A4xVideoButtonStyle, closed) {
  A4xVideoButtonStyleTheme = 0,
  A4xVideoButtonStyleLine = 1,
  A4xVideoButtonStyleNone = 2,
};


SWIFT_CLASS("_TtC10A4xLiveSDK15A4xWebRtcPlayer")
@interface A4xWebRtcPlayer : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol RTCVideoRenderer;

@interface A4xWebRtcPlayer (SWIFT_EXTENSION(A4xLiveSDK)) <RTCVideoViewDelegate>
- (void)videoView:(id <RTCVideoRenderer> _Nonnull)videoView didChangeVideoSize:(CGSize)size;
@end



@interface A4xWebRtcPlayer (SWIFT_EXTENSION(A4xLiveSDK))
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end



SWIFT_CLASS("_TtC10A4xLiveSDK27A4xWebRtcRequestResultModel")
@interface A4xWebRtcRequestResultModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK29A4xWebRtcTicketIceServerModel")
@interface A4xWebRtcTicketIceServerModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK20A4xWebRtcTicketModel")
@interface A4xWebRtcTicketModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK18A4xWebRtcViewModel")
@interface A4xWebRtcViewModel : NSObject
- (void)setWhiteLightWithEnable:(BOOL)enable;
- (void)stopUrlPlayerWithDeviceId:(NSString * _Nullable)deviceId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end





@interface A4xWebRtcViewModel (SWIFT_EXTENSION(A4xLiveSDK))
- (void)enterActiveGround;
- (void)enterBackGround;
- (void)keepAlive;
- (void)sendKeepAliveWithTime:(NSInteger)time comple:(void (^ _Nullable)(NSString * _Nullable))comple;
- (void)updateSpeedAction;
@end


SWIFT_CLASS("_TtC10A4xLiveSDK19A4xWebSocketManager")
@interface A4xWebSocketManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC10A4xLiveSDK23DataChannelRequestModel")
@interface DataChannelRequestModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
